import logging
from aiogram import Dispatcher, types, F
from sqlalchemy.ext.asyncio import AsyncSession
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from app.config import settings
from app.database.models import User
from app.keyboards.inline import get_support_keyboard
from app.localization.texts import get_texts

logger = logging.getLogger(__name__)


async def show_support_info(
        callback: types.CallbackQuery,
        db_user: User
):
    texts = get_texts(db_user.language)

    await callback.message.edit_text(
        texts.SUPPORT_INFO,
        reply_markup=get_support_keyboard(db_user.language)
    )
    await callback.answer()


async def help_vpn_not_working(call: types.CallbackQuery):
    await call.message.delete()
    language = "ru"  # –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —è–∑—ã–∫ –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    texts = get_texts(language)

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=texts.BACK, callback_data="help")]
    ])

    help_text = "üö´ –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç VPN\n\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É –í–∞—Å —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ\n2Ô∏è‚É£ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –∏ —Å–Ω–æ–≤–∞ –≤–∫–ª—é—á–∏—Ç—å VPN\n3Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ \n\nüÜò –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."

    await call.message.answer(text=help_text, reply_markup=keyboard)
    await call.answer()


async def help_instagram_not_working(call: types.CallbackQuery):
    await call.message.delete()
    language = "ru"
    texts = get_texts(language)

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=texts.BACK, callback_data="help")]
    ])

    help_text = "üì∏ –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ Instagram\n\n‚ùó –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω–æ —Å –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è–º–∏ —Ä–∞–±–æ—Ç—ã Instagram –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö.\n\n1Ô∏è‚É£ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ VPN-—Å–µ—Ä–≤–µ—Ä—É\n2Ô∏è‚É£ –û–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Instagram –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏\n3Ô∏è‚É£ –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n\nüÜò –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–º–æ–≥–∞–µ—Ç, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."

    await call.message.answer(text=help_text, reply_markup=keyboard)
    await call.answer()


async def help_vpn_disconnects(call: types.CallbackQuery):
    await call.message.delete()
    language = "ru"
    texts = get_texts(language)

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=texts.BACK, callback_data="help")]
    ])

    help_text = "ü§™ VPN –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è —Å–∞–º –ø–æ —Å–µ–±–µ\n\n1Ô∏è‚É£ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ v2RayTun –∏–ª–∏ –¥—Ä—É–≥–æ–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–µ –í–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–º–µ–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Ä–∞–±–æ—Ç—É –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\n2Ô∏è‚É£ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä, –µ—Å–ª–∏ —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∞\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏.\n\nüÜò –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
    await call.message.answer(text=help_text, reply_markup=keyboard)
    await call.answer()


async def help_support(call: types.CallbackQuery):
    await call.message.delete()
    language = "ru"
    texts = get_texts(language)

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö–ø–æ–¥–¥—Ä–µ–∂–∫—É",
                                 url=f"https://t.me/{settings.SUPPORT_USERNAME.lstrip('@')}")
        ],
        [InlineKeyboardButton(text=texts.BACK, callback_data="help")]
    ])

    help_text = "üÜò–í—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –Ω–∞—à—É —Å–ª—É–∂–±—É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏üëá"
    await call.message.answer(text=help_text, reply_markup=keyboard)
    await call.answer()


async def help_back(call: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ"""
    await call.message.delete()
    language = "ru"  # –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —è–∑—ã–∫ –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    texts = get_texts(language)

    keyboard = get_support_keyboard(language)
    await call.message.answer(text=texts.SUPPORT_INFO, reply_markup=keyboard)
    await call.answer()


def register_handlers(dp: Dispatcher):
    # –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    dp.callback_query.register(
        show_support_info,
        F.data == "menu_support"
    )

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    dp.callback_query.register(
        help_vpn_not_working,
        F.data == "help_vpn_not_working"
    )

    dp.callback_query.register(
        help_instagram_not_working,
        F.data == "help_instagram_not_working"
    )

    dp.callback_query.register(
        help_vpn_disconnects,
        F.data == "help_vpn_disconnects"
    )

    dp.callback_query.register(
        help_support,
        F.data == "help_support"
    )

    dp.callback_query.register(
        help_back,
        F.data == "help"
    )

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    dp.callback_query.register(
        help_back,
        F.data == "back_to_menu_from_support"
    )