import logging
from aiogram import Router, F, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

logger = logging.getLogger(__name__)
router = Router()

@router.callback_query(F.data == "download_app")
async def download_app_handler(call: types.CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì± Iphone", callback_data="instructions_iphone")],
        [InlineKeyboardButton(text="üì± Android", callback_data="instructions_android")],
        [InlineKeyboardButton(text="üì± Huawei –∏ HONOR", callback_data="instructions_huawei")],
        [InlineKeyboardButton(text="üíª MacOS", callback_data="instructions_macos")],
        [InlineKeyboardButton(text="üñ•Ô∏è Windows", callback_data="instructions_windows")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_profile")],
    ])
    await call.message.edit_text(
        "–ù–∞ –∫–∞–∫–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∂–µ–ª–∞–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?\n"
        "–ö –æ–¥–Ω–æ–º—É –∫–ª—é—á—É –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –¥–æ 3 —É—Å—Ç—Ä–æ–π—Å—Ç–≤.",
        reply_markup=keyboard
    )
    await call.answer()


@router.callback_query(F.data == "instructions_iphone")
async def instructions_iphone_handler(call: types.CallbackQuery):
    text = (
        "<b>üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è iPhone/iPad:</b>\n\n"
        "1. <b>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</b>\n "  
        "<a href='https://apps.apple.com/app/id6476628951'>v2RayTun</a>\n"
        "<a href='https://apps.apple.com/us/app/happ-proxy-utility/id6504287215'>(–†–µ–∑–µ—Ä–≤–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É)</a>\n"
        "2. <b>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ</b> —Å—Å—ã–ª–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ (–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ—ë), –∫–æ—Ç–æ—Ä—É—é –æ—Ç–ø—Ä–∞–≤–∏–ª –±–æ—Ç\n"  
        "3. <b>–û—Ç–∫—Ä–æ–π—Ç–µ</b> –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É\n"  
        "4. <b>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å</b> –∫ —Å–µ—Ä–≤–µ—Ä—É"
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="download_app")]
    ])
    await call.message.edit_text(text, reply_markup=keyboard)
    await call.answer()

@router.callback_query(F.data == "instructions_android")
async def instructions_android_handler(call: types.CallbackQuery):
    text = (
        "<b>üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è Android:</b>\n\n"
        "1. <b>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</b>\n "
        "<a href='https://play.google.com/store/apps/details?id=com.v2raytun\.android'>–°–∫–∞—á–∞—Ç—å –∏–∑ Google Store</a> –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ APK\n"
        "<a href='https://github.com/Happ-proxy/happ-android/releases/latest/download/Happ.apk'>–°–∫–∞—á–∞—Ç—å APK</a>\n"
        "2. <b>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ</b> —Å—Å—ã–ª–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ (–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ—ë), –∫–æ—Ç–æ—Ä—É—é –æ—Ç–ø—Ä–∞–≤–∏–ª –±–æ—Ç\n"
        "3. <b>–û—Ç–∫—Ä–æ–π—Ç–µ</b> –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É\n"
        "4. <b>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å</b> –∫ —Å–µ—Ä–≤–µ—Ä—É"
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="download_app")]
    ])
    await call.message.edit_text(text, reply_markup=keyboard)
    await call.answer()

@router.callback_query(F.data == "instructions_huawei")
async def instructions_huawei_handler(call: types.CallbackQuery):
    text = (
        "<b>üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è Huawei –∏ HONOR:</b>\n\n"
        "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Huawei, Honor –∏ –¥—Ä—É–≥–∏—Ö Android —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –±–µ–∑ Google Play —Å APK —Ñ–∞–π–ª–æ–º –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:\n"
        "<a href='https://t.me/v2raytunhuawei'>–û—Ç–∫—Ä—ã—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é</a>\n"
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="download_app")]
    ])
    await call.message.edit_text(text, reply_markup=keyboard)
    await call.answer()

@router.callback_query(F.data == "instructions_macos")
async def instructions_macos_handler(call: types.CallbackQuery):
    text = (
        "<b>üíª –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è MacOS:</b>\n\n"
        "1. <b>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</b>\n "
        "<a href='https://apps.apple.com/app/id6476628951'>C–∫–∞—á–∞—Ç—å –∏–∑ App Store</a>\n"
        "2. <b>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ</b> —Å—Å—ã–ª–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ (–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ—ë), –∫–æ—Ç–æ—Ä—É—é –æ—Ç–ø—Ä–∞–≤–∏–ª –±–æ—Ç\n"
        "3. <b>–û—Ç–∫—Ä–æ–π—Ç–µ</b> –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É\n"
        "4. <b>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å</b> –∫ —Å–µ—Ä–≤–µ—Ä—É"
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="download_app")]
    ])
    await call.message.edit_text(text, reply_markup=keyboard)
    await call.answer()

@router.callback_query(F.data == "instructions_windows")
async def instructions_windows_handler(call: types.CallbackQuery):
    text = (
        "<b>üíª –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è Windows:</b>\n\n"
        "1. <b>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</b>\n "
        "<a href='https://storage.v2raytun.com/v2RayTun_Setup.exe'>–°–∫–∞—á–∞—Ç—å v2RayTun</a>\n"
        "2. <b>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ</b> —Å—Å—ã–ª–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ (–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ—ë), –∫–æ—Ç–æ—Ä—É—é –æ—Ç–ø—Ä–∞–≤–∏–ª –±–æ—Ç\n"
        "3. <b>–û—Ç–∫—Ä–æ–π—Ç–µ</b> –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É\n"
        "4. <b>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å</b> –∫ —Å–µ—Ä–≤–µ—Ä—É"
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="download_app")]
    ])
    await call.message.edit_text(text, reply_markup=keyboard)
    await call.answer()

